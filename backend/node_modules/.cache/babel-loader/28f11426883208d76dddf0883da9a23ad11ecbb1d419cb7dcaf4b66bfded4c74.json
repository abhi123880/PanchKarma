{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhi\\\\OneDrive\\\\Desktop\\\\Panchkarma\\\\client\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport RemedyCard from \"./RemedyCard\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Hero() {\n  // ... (no changes needed)\n}\n_c = Hero;\nfunction RemediesGrid({\n  remedies,\n  onCardClick\n}) {\n  if (!remedies.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        padding: \"1rem\"\n      },\n      children: \"No remedies found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    \"aria-label\": \"List of Ayurvedic remedies\",\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(auto-fit, minmax(280px, 1fr))\",\n      gap: 20,\n      marginBottom: 40,\n      padding: \"0 1rem\"\n    },\n    children: remedies.map(remedy => /*#__PURE__*/_jsxDEV(RemedyCard, {\n      remedy: remedy,\n      onSelect: () => onCardClick(remedy.id)\n    }, remedy.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c2 = RemediesGrid;\nexport default function Home({\n  searchQuery = \"\"\n}) {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth(); // <-- Get loading state\n  const [remediesData, setRemediesData] = useState([]);\n  const [filteredRemedies, setFilteredRemedies] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(\"/remedy.json\").then(response => response.json()).then(data => {\n      setRemediesData(data);\n      setFilteredRemedies(data);\n    });\n  }, []);\n  useEffect(() => {\n    let result = remediesData;\n    if (searchQuery.trim()) {\n      result = result.filter(rem => rem.name.toLowerCase().includes(searchQuery.toLowerCase()));\n    }\n    setFilteredRemedies(result);\n  }, [searchQuery, remediesData]);\n\n  // Don't allow navigation until loading is finished\n  const handleRemedyClick = id => {\n    if (loading) return; // Prevent navigation while loading\n    if (user) {\n      navigate(`/remedy/${id}`);\n    } else {\n      navigate(\"/sign-in\");\n    }\n  };\n\n  // Show a loading spinner or message while auth state is loading\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RemediesGrid, {\n      remedies: filteredRemedies,\n      onCardClick: handleRemedyClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"ZTOocPsG+58XCQ2+ZNUyvNqqVe8=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c3 = Home;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Hero\");\n$RefreshReg$(_c2, \"RemediesGrid\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","RemedyCard","useAuth","jsxDEV","_jsxDEV","Hero","_c","RemediesGrid","remedies","onCardClick","length","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","marginBottom","map","remedy","onSelect","id","_c2","Home","searchQuery","_s","user","loading","remediesData","setRemediesData","filteredRemedies","setFilteredRemedies","navigate","fetch","then","response","json","data","result","trim","filter","rem","name","toLowerCase","includes","handleRemedyClick","_c3","$RefreshReg$"],"sources":["C:/Users/Abhi/OneDrive/Desktop/Panchkarma/client/src/pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport RemedyCard from \"./RemedyCard\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nexport function Hero() {\r\n  // ... (no changes needed)\r\n}\r\n\r\nfunction RemediesGrid({ remedies, onCardClick }) {\r\n  if (!remedies.length) {\r\n    return <p style={{ padding: \"1rem\" }}>No remedies found.</p>;\r\n  }\r\n  return (\r\n    <section\r\n      aria-label=\"List of Ayurvedic remedies\"\r\n      style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(auto-fit, minmax(280px, 1fr))\",\r\n        gap: 20,\r\n        marginBottom: 40,\r\n        padding: \"0 1rem\",\r\n      }}\r\n    >\r\n      {remedies.map((remedy) => (\r\n        <RemedyCard key={remedy.id} remedy={remedy} onSelect={() => onCardClick(remedy.id)} />\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default function Home({ searchQuery = \"\" }) {\r\n  const { user, loading } = useAuth(); // <-- Get loading state\r\n  const [remediesData, setRemediesData] = useState([]);\r\n  const [filteredRemedies, setFilteredRemedies] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(\"/remedy.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setRemediesData(data);\r\n        setFilteredRemedies(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let result = remediesData;\r\n\r\n    if (searchQuery.trim()) {\r\n      result = result.filter((rem) =>\r\n        rem.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setFilteredRemedies(result);\r\n  }, [searchQuery, remediesData]);\r\n\r\n  // Don't allow navigation until loading is finished\r\n  const handleRemedyClick = (id) => {\r\n    if (loading) return; // Prevent navigation while loading\r\n    if (user) {\r\n      navigate(`/remedy/${id}`);\r\n    } else {\r\n      navigate(\"/sign-in\");\r\n    }\r\n  };\r\n\r\n  // Show a loading spinner or message while auth state is loading\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <main>\r\n      <Hero />\r\n      <RemediesGrid remedies={filteredRemedies} onCardClick={handleRemedyClick} />\r\n    </main>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}