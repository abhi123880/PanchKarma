{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhi\\\\OneDrive\\\\Desktop\\\\Panchkarma\\\\client\\\\src\\\\components\\\\ScrollToTopButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/ScrollToTopButton.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ScrollToTopButton() {\n  _s();\n  const [showButton, setShowButton] = useState(false);\n  const [scrollPercent, setScrollPercent] = useState(0);\n  useEffect(() => {\n    function handleScroll() {\n      const scrollTop = window.scrollY || document.documentElement.scrollTop;\n      const docHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n      const scrolled = docHeight > 0 ? scrollTop / docHeight * 100 : 0;\n      setShowButton(scrollTop > 200);\n      setScrollPercent(Math.round(scrolled));\n    }\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n  const handleClick = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n\n  // Progress ring variables\n  const radius = 24;\n  const stroke = 4;\n  const normalizedRadius = radius - stroke / 2;\n  const circumference = normalizedRadius * 2 * Math.PI;\n  const progress = Math.min(scrollPercent, 100);\n  const strokeDashoffset = circumference - progress / 100 * circumference;\n  return showButton ? /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"scroll-top-btn\",\n    onClick: handleClick,\n    \"aria-label\": \"Scroll to top\",\n    tabIndex: 0,\n    children: scrollPercent === 100 ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"arrow only-arrow\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"28\",\n        height: \"28\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n          points: \"6 15 12 9 18 15\",\n          stroke: \"#fff\",\n          strokeWidth: \"2.5\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"progress-ring\",\n        height: radius * 2,\n        width: radius * 2,\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          className: \"progress-ring__circle\",\n          stroke: \"#60a5fa\",\n          strokeWidth: stroke,\n          fill: \"transparent\",\n          r: normalizedRadius,\n          cx: radius,\n          cy: radius,\n          style: {\n            strokeDasharray: circumference,\n            strokeDashoffset,\n            transition: \"stroke-dashoffset 0.3s\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"percent center\",\n        children: [scrollPercent, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) : null;\n}\n_s(ScrollToTopButton, \"rj32pe6G3dq/sQBOum6WOv8n3gk=\");\n_c = ScrollToTopButton;\nvar _c;\n$RefreshReg$(_c, \"ScrollToTopButton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ScrollToTopButton","_s","showButton","setShowButton","scrollPercent","setScrollPercent","handleScroll","scrollTop","window","scrollY","document","documentElement","docHeight","scrollHeight","clientHeight","scrolled","Math","round","addEventListener","removeEventListener","handleClick","scrollTo","top","behavior","radius","stroke","normalizedRadius","circumference","PI","progress","min","strokeDashoffset","className","onClick","tabIndex","children","width","height","viewBox","fill","points","strokeWidth","strokeLinecap","strokeLinejoin","fileName","_jsxFileName","lineNumber","columnNumber","r","cx","cy","style","strokeDasharray","transition","_c","$RefreshReg$"],"sources":["C:/Users/Abhi/OneDrive/Desktop/Panchkarma/client/src/components/ScrollToTopButton.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/ScrollToTopButton.css\";\r\n\r\nexport default function ScrollToTopButton() {\r\n  const [showButton, setShowButton] = useState(false);\r\n  const [scrollPercent, setScrollPercent] = useState(0);\r\n\r\n  useEffect(() => {\r\n    function handleScroll() {\r\n      const scrollTop = window.scrollY || document.documentElement.scrollTop;\r\n      const docHeight =\r\n        document.documentElement.scrollHeight - document.documentElement.clientHeight;\r\n      const scrolled = docHeight > 0 ? (scrollTop / docHeight) * 100 : 0;\r\n\r\n      setShowButton(scrollTop > 200);\r\n      setScrollPercent(Math.round(scrolled));\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  // Progress ring variables\r\n  const radius = 24;\r\n  const stroke = 4;\r\n  const normalizedRadius = radius - stroke / 2;\r\n  const circumference = normalizedRadius * 2 * Math.PI;\r\n  const progress = Math.min(scrollPercent, 100);\r\n  const strokeDashoffset =\r\n    circumference - (progress / 100) * circumference;\r\n\r\n  return showButton ? (\r\n    <button\r\n      className=\"scroll-top-btn\"\r\n      onClick={handleClick}\r\n      aria-label=\"Scroll to top\"\r\n      tabIndex={0}\r\n    >\r\n      {scrollPercent === 100 ? (\r\n        <span className=\"arrow only-arrow\">\r\n          {/* Chevron Up SVG */}\r\n          <svg width=\"28\" height=\"28\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n            <polyline\r\n              points=\"6 15 12 9 18 15\"\r\n              stroke=\"#fff\"\r\n              strokeWidth=\"2.5\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </span>\r\n      ) : (\r\n        <>\r\n          <svg\r\n            className=\"progress-ring\"\r\n            height={radius * 2}\r\n            width={radius * 2}\r\n          >\r\n            <circle\r\n              className=\"progress-ring__circle\"\r\n              stroke=\"#60a5fa\"\r\n              strokeWidth={stroke}\r\n              fill=\"transparent\"\r\n              r={normalizedRadius}\r\n              cx={radius}\r\n              cy={radius}\r\n              style={{\r\n                strokeDasharray: circumference,\r\n                strokeDashoffset,\r\n                transition: \"stroke-dashoffset 0.3s\",\r\n              }}\r\n            />\r\n          </svg>\r\n          <span className=\"percent center\">{scrollPercent}%</span>\r\n        </>\r\n      )}\r\n    </button>\r\n  ) : null;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}